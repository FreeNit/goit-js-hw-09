{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAmBF,SAASC,cAAc,yBAC1CE,EAAaJ,EAAOE,cAAc,uBAClCG,EAAiBL,EAAOE,cAAc,sBACtCI,EAAqBN,EAAOE,cAAc,wBAOhD,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAhBPT,EAAOiB,iBAAiB,UAAU,SAAAC,GAChCA,EAAMC,gB,IAmBRhB,EAAiBc,iBAAiB,SAAS,WAKzC,IAJA,IAAIG,EAAQC,OAAOjB,EAAWkB,OACxBC,EAAYF,OAAOhB,EAAeiB,OAClCE,EAASH,OAAOf,EAAmBgB,OAEhCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChClB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBX,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAC3DsB,QAAMC,IAAI,uBAAwCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DwB,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBX,EAAA8B,OAAOM,QAAQ,sBAAuCJ,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAC1DsB,QAAMC,IAAI,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DW,GAASG,EAEXvB,EAAOmC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEL = document.querySelector('.form');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\nconst inputDelay = formEL.querySelector('input[name=\"delay\"]');\nconst inputDelayStep = formEL.querySelector('input[name=\"step\"]');\nconst inputPromiseAmount = formEL.querySelector('input[name=\"amount\"]');\n\n// prevent basic behavior of the form element\nformEL.addEventListener('submit', event => {\n  event.preventDefault();\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nbtnCreatePromise.addEventListener('click', () => {\n  let delay = Number(inputDelay.value);\n  const delayStep = Number(inputDelayStep.value);\n  const amount = Number(inputPromiseAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += delayStep;\n  }\n  formEL.reset();\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEL","document","querySelector","$ce04d3a99e08e73b$var$btnCreatePromise","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputDelayStep","$ce04d3a99e08e73b$var$inputPromiseAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","delayStep","amount","i","then","param","Notify","success","concat","console","log","catch","failure","reset"],"version":3,"file":"03-promises.34a85b02.js.map"}